<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.li.community.dao.DiscussPostMapper">

    <sql id="selectFields">
        id, user_id, title, content, type, status, create_time, comment_count, score
    </sql>

    <sql id="insertFields">
        user_id, title, content, type, status, create_time, comment_count, score
    </sql>

    <sql id="myReply">
        id, user_id, entity_type, entity_id,target_id,content,  status, create_time
    </sql>
    <select id="selectDiscussPosts" resultType="DiscussPost">
        select <include refid="selectFields"></include>
        from discuss_post
        where status != 2
        <if test="userId!=0">
            and user_id = #{userId}
        </if>
        <if test="orderMode==0">
            order by type desc, create_time desc
        </if>
        <if test="orderMode==1">
            order by type desc, score desc, create_time desc
        </if>
        limit #{offset}, #{limit}
    </select>

    <select id="selectDiscussPostRows" resultType="int">
        select count(id)
        from discuss_post
        where status != 2
        <if test="userId!=0">
            and user_id = #{userId}
        </if>
    </select>

    <insert id="insertDiscussPost" parameterType="DiscussPost" keyProperty="id">
        insert into discuss_post(<include refid="insertFields"></include>)
        values(#{userId},#{title},#{content},#{type},#{status},#{createTime},#{commentCount},#{score})
    </insert>

    <select id="selectDiscussPostById" resultType="DiscussPost">
        select <include refid="selectFields"></include>
        from discuss_post
        where id = #{id}
    </select>

    <update id="updateCommentCount">
        update discuss_post set comment_count = #{commentCount} where id = #{id}
    </update>

    <update id="updateType">
        update discuss_post set type = #{type} where id = #{id}
    </update>

    <update id="updateStatus">
        update discuss_post set status = #{status} where id = #{id}
    </update>

    <update id="updateScore">
        update discuss_post set score = #{score} where id = #{id}
    </update>
<!--我的帖子-->
    <select id="selectMyDiscussPosts" resultType="DiscussPost">
        select <include refid="selectFields"></include>
        from discuss_post
        where status !=2
        and user_id = #{userId}
        order by id desc
        limit #{offset}, #{limit}
    </select>

    <select id="selectMyDiscussPostRows" resultType="int">
        select count(id)
        from discuss_post
        where status != 2
        <if test="userId!=0">
            and user_id = #{userId}
        </if>
    </select>

    <select id="selectMyDiscussPostId" resultType="int">
        select id
        from discuss_post
        where user_id = #{userId}
        and status !=2
    </select>
    <select id="selectMyReply" resultType="Comment">
        select <include refid="myReply"></include>
        from comment
        where user_id = #{userId}
        and status !=2
    </select>


<!--    查询评论对应帖子    -->
    <select id="selectFindDiscussPost" resultType="DiscussPost">
        select discuss_post.title
        from comment,discuss_post
        where comment.entity_id =discuss_post.id AND comment.id =#{entityId}

    </select>

<!--    数量-->
    <select id="selectConversationCount" resultType="int">
        select count(m.id) from (
            select id from discuss_post
            where status != 2
            and user_id = #{userId}
        ) as m
    </select>

    <select id="selectConversations" resultType="DiscussPost">
        select <include refid="selectFields"></include>
        from discuss_post
        where id in (
        select max(id) from discuss_post
        where status != 2
        and user_id = #{userId}
        )
        order by id desc
        limit #{offset}, #{limit}
    </select>
</mapper>